MUSIC_STORE_DATABASE (PROJECT PORTFOLIO)

Question set easy) Q.1
-- Who is the senior most employee based on the jon title?
select * from employee
order by levels desc
limit 1

Q.2)
-- Which countries have the most invoices?
select count(*) as c, billing_country 
from invoice
group by billing_country
order by c desc

Q.3)
--What are top three values of total invoices?
select total from invoice
order by total desc
limit 3 

Q.4)
--Which city has the best customers? We would like to through a promotional Miscical Festival in the city
--we made the most money.Write a query that returns one city that has the higest sum of invoive total. 
--Reurn both the city name & sum of all invoice totals.
select sum(total) as invoive_total, billing_city 
from invoice
group by billing_city
order by invoive_total desc

Q.5)
--Who is the best customer? The customer who has spent the most money will be declared the best customer,
--Write a query that returns the person who has spent the most money.
select customer.customer_id,customer.first_name,customer.last_name,sum(invoice.total) as total
from customer
join invoice
on customer.customer_id = invoice.customer_id
group by customer.customer_id 
order by total desc
limit 1

Question set Moderate)
Q.1)
--write a query to return the email,first name, last name and genre of all rock music listners.
--return your list ordered by alphabatically by email starting with A.
select distinct email,first_name,last_name
from customer
Join invoice on customer.customer_id = invoice.customer_id
Join invoice_line on invoice.invoice_id = invoice_line.invoice_id
where track_id in(
      select track_id from track
	  join genre on track.genre_id = genre.genre_id
	  where genre.name like 'Rock'
)
order by email;

--Question set 2) Q.3
--return all the track names that have a song length longer than the avg. song length.
--return the name and milliseconds for each track. order by the song length with the longest songs 
-- listed first.
select name, milliseconds
from track
where milliseconds > (
     select avg(milliseconds) as avg_track_length
	 from track)
order by milliseconds desc; 

-- Advance level questions)
 Q.1)
--find how much amount spent by each customer on artist? write a query to return customer name,artist name and
--total spent
WITH best_selling_artist as(
	select artist.artist_id as artist_id,artist.name as artist_name,
	sum(invoice_line.unit_price*invoice_line.quantity) as total_sales
	from invoice_line
	join track on invoice_line.track_id = track.track_id
	join album on track.album_id = album.album_id
	join artist on album.artist_id = artist.artist_id
	group by 1
	order by 3 desc
	limit 1
)
select c.customer_id,c.first_name,c.last_name,bsa.artist_name,
sum(il.unit_price*il.quantity) as amount_spent
from invoice i 
join customer c on c.customer_id = i.customer_id
join invoice_line il on il.invoice_id = i.invoice_id
join track t on t.track_id = il.track_id
join album alb on alb.album_id = t.album_id
join best_selling_artist bsa on bsa.artist_id = alb.artist_id
group by 1,2,3,4
order by 5 desc;

--Q.2)
--we want to find the out the most popular music genre for each country .
--we determine the most popular genre with the highest amount of purchase.
--Method_1
with popular_genre as (
    select count(invoice_line.quantity) as purchases,customer.country,genre.name,genre.genre_id,
	ROW_NUMBER() over(partition by customer.country order by count(invoice_line.quantity) desc) as RowNo
	from invoice_line
	join invoice on invoice_line.invoice_id = invoice.invoice_id
	join customer on customer.customer_id = invoice.customer_id
	join track on track.track_id = invoice_line.track_id
	join genre on genre.genre_id = track.genre_id
	group by 2,3,4
	order by 2 asc, 1 desc
)
select * from popular_genre where RowNo<=1
--Method_2
with Recursive
     sales_per_country as(
	select count(*) as purchases_per_genre, customer.country, genre.name, genre.genre_id
	from invoice_line
	join invoice on invoice_line.invoice_id = invoice.invoice_id
	join customer on customer.customer_id = invoice.customer_id
	join track on track.track_id = invoice_line.track_id
	join genre on genre.genre_id = track.genre_id
	group by 2,3,4
	order by 2 asc
	),
	max_genre_per_country as (select max(purchases_per_genre) as max_genre_number, country
		from sales_per_country
		group by 2
		order by 2)
select sales_per_country.*
from sales_per_country
join max_genre_per_country on sales_per_country.country = max_genre_per_country.country
where sales_per_country.purchases_per_genre = max_genre_per_country.max_genre_number


--Q.3)
--Write a query that determines the customer that has spent the most on music for each country.
--Write a query that returns the country along with top customer and how much they spent.
--for countries where the top amount spent is shared,provide all customers  who spent this amount.
--Method-1
with coustomer_with_country as (
     select customer.customer_id,first_name,last_name,billing_country,sum(total) as total_spending,
	 ROW_NUMBER() over(partition by billing_country order by sum(total) desc) as RowNo
	 from invoice
	 Join customer on customer.customer_id = invoice.customer_id
	 group by 1,2,3,4
	 order by 4 asc,5 desc)
select * from coustomer_with_country where RowNo <=1






		 
		 
		 
		 





































